const fs = require('fs');
const inventoryFile = './inventories.json';

function loadInventory() {
    if (!fs.existsSync(inventoryFile)) {
        fs.writeFileSync(inventoryFile, '{}', 'utf8');
    }
    return JSON.parse(fs.readFileSync(inventoryFile, 'utf8'));
}

module.exports = {
    name: 'inventory',
    aliases: ['inv'], // –¢–µ–ø–µ—Ä—å ?inv —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ ?inventory
    description: '–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å',
    async execute(message) {
        const userId = message.author.id;
        const inventoryData = loadInventory();

        // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
        if (!inventoryData[userId] || Object.keys(inventoryData[userId]).length === 0) {
            return message.reply('üëú –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.');
        }

        let reply = 'üéí **–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å**:\n';
        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã (–∫–ª—é—á ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
        for (const [itemName, count] of Object.entries(inventoryData[userId])) {
            reply += `üîπ **${itemName}** x${count}\n`;
        }

        message.reply(reply);
    },
};
